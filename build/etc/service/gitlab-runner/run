#!/bin/bash

GR_USER=${GR_USER:=gitlab-runner}
GR_HOME=$( readlink -e $( getent passwd ${GR_USER} | cut -d: -f6) )
GR_DATA=${GR_DATA:=${GR_HOME}/data}
GR_CERTIFICATES=${GR_CERTIFICATES:=${GR_DATA}/certs/ca.crt}

mkdir -p ${GR_DATA} >/dev/null 2>&1 || true
chown ${GR_USER}: -R ${GR_HOME}

# update certificates
#
test -f ${GR_CERTIFICATES} && {
  mkdir -p /usr/local/share/ca-certificates >/dev/null 2>&1 || true
  cp -f ${GR_CERTIFICATES} /usr/local/share/ca-certificates/ca.crt
  update-ca-certificates --fresh >/dev/null
}

# generate deploy keys
#
sudo -HEu ${GR_USER} mkdir --mode 700 -p ${GR_DATA}/.ssh >/dev/null 2>&1 || true

test -f ${GR_DATA}/.ssh/id_rsa || {
  rm -rf ${GR_DATA}/.ssh/id_rsa ${GR_DATA}/.ssh/id_rsa.pub
  sudo -HEu ${GR_USER} ssh-keygen -t rsa -N "" -C ${GR_USER} -f ${GR_DATA}/.ssh/id_rsa
}

test -L ${GR_USER}/.ssh || {
  sudo -HEu ${GR_USER} ln -sf ${GR_DATA}/.ssh ${GR_HOME}/.ssh
}

echo
echo -n "Your SSH deploy key is: "
cat ${GR_DATA}/.ssh/id_rsa.pub
chmod 600 ${GR_DATA}/.ssh/id_rsa ${GR_DATA}/.ssh/id_rsa.pub
chmod 700 ${GR_DATA}/.ssh

# add docker group
#
test -S /run/docker.sock && {
  dgid=$(stat -c %g /run/docker.sock)
  dgrp=$(stat -c %G /run/docker.sock)
  test "x${dgrp}" == "xUNKNOWN" && {
    groupadd -g ${dgid} ${dgrp}
  }
  usermod -a -G ${dgrp} ${GR_USER}
}

# create runner config
#
test -f ${GR_DATA}/config.toml && {
  sudo -HEu ${GR_USER} gitlab-ci-multi-runner register --config ${GR_DATA}/config.toml
} || {
  test -n ${SERVER_URL} \
    -a -n ${RUNNER_TOKEN} \
    -a -n ${RUNNER_DESCRIPTION} \
    -a -n ${RUNNER_EXECUTOR} && {
    sudo -HEu ${GR_USER} gitlab-ci-multi-runner register \
      --config ${GR_DATA}/config.toml -n -u "${SERVER_URL}" -r "${RUNNER_TOKEN}" \
      --name "${RUNNER_DESCRIPTION}" --executor "${RUNNER_EXECUTOR}"
  }
}

exec sudo -HEu ${GR_USER} gitlab-ci-multi-runner run --config ${GR_DATA}/config.toml
